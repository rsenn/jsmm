// <jsmm> -*- C++ -*-

// C++ wrapper for the SpiderMonkey JavaScript engine.
// Copyright (C) 2006  Roman Senn <r.senn@nexbyte.com>
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA

#ifndef jsmm_stringapi_H
#define jsmm_stringapi_H

#include <jsmm/reference>
#include <jsmm/types>

jsmm_namespace_BEGIN

/** Wraps a JavaScript string */
struct StringAPI : public StringRef
{
public:  
  /** Create empty string */
  StringAPI(StringPtr ptr) : StringRef(ptr)
  {}

  StringAPI(StringRef ref) : StringRef(ref)
  {}

  Byte *getBytes() const;
  Char *getChars() const;
  Uint getLength() const;

  static StringPtr create(ContextRef cx, const Byte *bytes, Uint length);
  static StringPtr create(ContextRef cx, const std::string &str);

  static Int compare(StringRef str1, StringRef str2);
};

jsmm_namespace_END

#endif /* jsmm_stringapi_H */
