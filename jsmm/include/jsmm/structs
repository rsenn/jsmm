// <jsmm> -*- C++ -*-

// C++ wrapper for the SpiderMonkey JavaScript engine.
// Copyright (C) 2006  Roman Senn <r.senn@nexbyte.com>
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA

#ifndef jsmm_structs_H
#define jsmm_structs_H

#include <stdint.h>

jsmm_namespace_BEGIN

/** JS::CList is a circular linked list. */
struct CList
{
  struct CList *next;
  struct CList *prev;
};

/** JS::IdArray is an array of Id's */
struct IdArray
{
  Uint length;
  Id   vector[1];
};

/** JS::Property */
struct Property
{
  Id id;
};

/** JS::Principals */
struct Principals
{
  char             *codebase;
  PrincipalGetOp   *getPrincipalArray;
  PrincipalCheckOp *globalPrivilegesEnabled;
  RefCount          refcount;
  PrincipalOp      *destroy;
  PrincipalCmpOp   *subsume;
};

/**
 * Locale specific string conversion callback.
 */
struct LocaleCallbacks
{
  LocaleToUpperCase localeToUpperCase;
  LocaleToLowerCase localeToLowerCase;
  LocaleCompare     localeCompare;
  LocaleToUnicode   localeToUnicode;
};

/*  struct ErrorFormatString
{
  const char *format;
  Uint argCount;
};*/

/**
 * Current state of exception handling.
 */
struct ExceptionState
{
  Bool  throwing;
  Value exception;
};

jsmm_namespace_END

#endif /* jsmm_structs_H */
