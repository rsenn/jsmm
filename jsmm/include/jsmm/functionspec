// <jsmm> -*- C++ -*-

// C++ wrapper for the SpiderMonkey JavaScript engine.
// Copyright (C) 2006  Roman Senn <r.senn@nexbyte.com>
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA

#ifndef jsmm_functionspec_H
#define jsmm_functionspec_H

#include <jsmm/specarray>
#include <jsmm/callback>

jsmm_namespace_BEGIN

/** A structure describing a native JS function */
struct FunctionSpec
{
  const char *name;  /**< Function name */
  Native     *call;  /**< C function handling the calls */
  Uint8       nargs; /**< Number of arguments */
  Uint8       flags; /**< Function flags */
  Uint16      extra; /**< Reserved */
};

/** Array of function spec structures */
typedef SpecArray<FunctionSpec> FunctionSpecArray;

/**
 * Helper class for setting up function specs
 */
class FunctionSpecs : public FunctionSpecArray
{
public:
  /** Create a function spec list */
  FunctionSpecs() 
  {}

  /** Destroy the function spec list */
  ~FunctionSpecs()
  {}

  Bool add(const char *name, Native &call, Uint nargs, 
           Int flags = DefaultFunction);
  
  operator FunctionSpec *() const
  {
    return getBase();
  }
};

jsmm_namespace_END

#endif /* jsmm_functionspec_H */
